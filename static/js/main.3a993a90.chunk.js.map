{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","handleClearText","length","Alert","word","lower","charAt","slice","capitalize","msg","App","alert","setAlert","setMode","message","setTimeout","aboutText","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3a993a90.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { href } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={title: PropTypes.string,\r\n                  aboutText: PropTypes.string}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick=()=>{\r\n    console.log(\"Uppercase was clciked\");\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"success\");\r\n  }\r\n  \r\n  const handleLoClick=()=>{\r\n    console.log(\"LowerCase was clciked\");\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\",\"success\");\r\n  }\r\n  \r\n  const handleOnChange=(event)=>{\r\n    console.log(\"onChange\");\r\n    setText(event.target.value);\r\n  }\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\",\"success\");\r\n  }\r\n  const handleExtraSpaces=()=>{\r\n    var newText=text.split(/[  ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"ExtraSpaces handled\",\"success\");\r\n  }\r\n  const handleClearText=()=>{\r\n    setText(\"\")\r\n    props.showAlert(\"Text Cleared\",\"success\");\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n\r\n \r\nreturn (\r\n  <>\r\n\r\n  <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n  <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <buttton className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase </buttton>\r\n      <buttton className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase </buttton>\r\n      <buttton className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text </buttton>\r\n      <buttton className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</buttton>\r\n      <buttton className=\"btn btn-primary mx-1\" onClick={handleClearText}>Clear Text</buttton>\r\n      </div>\r\n\r\n      \r\n      \r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n\r\n</>   \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function \r\nAlert(props) {\r\n    const capitalize=(word)=>{\r\nconst lower=word.toLowerCase();\r\nreturn lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.Alert&&<div className={`alert alert-${props.Alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.Alert.type)}</strong>:{props.Alert.msg}\r\n</div>\r\n  )\r\n}\r\n","//import logo from './logo.svg';\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\nconst [alert, setAlert] = useState(null);\nconst [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\nconst showAlert=(message,type)=>{\n  setAlert({\n  msg:message,\n    type:type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\nconst toggleMode=()=>{\n  if(mode==='light')\n  {\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark Mode has been enabled\",\"success\");\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light Mode has been enabled\",\"success\");\n  }\n\n}\nreturn (\n  <>\n  {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n\n  {/* <Router> */}\n  <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n  <Alert Alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />} /> */}\n          {/* <Route exact path=\"/\" element={ */}\n            <TextForm showAlert={showAlert}heading=\"Enter the Text to Analyze below\" mode={mode}/>\n            {/* }/> */}\n        {/* </Routes> */}\n  </div>\n  {/* </Router> */}\n  </>\n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}